version: '2'

services:
  db:
    image: mariadb:10.1
    container_name: seafile-mysql
    restart: unless-stopped
#    expose:    # no need to expose port, it's done internally due to depends_on in seafile
#      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=${SEAFILE_MYSQL_ROOT_PASSWORD}
      - MYSQL_LOG_CONSOLE=true
    volumes:
      - ${DATADIR}/seafile/db:/var/lib/mysql
    networks:
      - seafile-net

  memcached:
    image: memcached:1.5.6
    container_name: seafile-memcached
    restart: unless-stopped
    entrypoint: memcached -m 256
    networks:
      - seafile-net

  seafile:
    image: seafileltd/seafile-mc:latest
    container_name: seafile-app
    restart: unless-stopped
    volumes:
      - ${DATADIR}/seafile/seafile-data:/shared
    environment:
      - DB_HOST=db
      - DB_ROOT_PASSWD=${SEAFILE_DB_ROOT_PASSWD}
      - TIME_ZONE=${TZ}
      - SEAFILE_ADMIN_EMAIL=${SEAFILE_ADMIN_EMAIL}
      - SEAFILE_ADMIN_PASSWORD=${SEAFILE_ADMIN_PASSWORD}
      - SEAFILE_SERVER_LETSENCRYPT=false
      - SEAFILE_SERVER_HOSTNAME=cloud.$DOMAINNAME
      - SEAFILE_SERVER_URL=https://cloud.$DOMAINNAME
    depends_on:
      - db
      - memcached
    networks:
      - seafile-net
      - t2_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=t2_proxy"
      - "traefik.http.routers.seafile.entrypoints=https"
      - "traefik.http.routers.seafile.rule=Host(`cloud.$DOMAINNAME`)"
        #      - "traefik.http.routers.seafile.middlewares=chain-no-auth@file"   # calling on secured chain in config.yml
        #      - "traefik.http.middlewares.sf-rep.redirectregex.permanent=true"
        #      - "traefik.http.middlewares.sf-header.headers.customFrameOptionsValue=SAMEORIGIN"
        #      - "traefik.http.routers.seafile-secure.middlewares=sf-rep,sf-header"
      - "traefik.http.routers.seafile.tls=true"
      - "traefik.http.routers.seafile.service=seafile-svc"
      - "traefik.http.services.seafile-svc.loadbalancer.server.port=80"
#      - "traefik.http.routers.seafile.service=seafile"       # Redirect to https, so no need

networks:
  t2_proxy:
    external:
      name: t2_proxy
  seafile-net:

